ALTER TABLE `users` CHANGE `role` `role` VARCHAR(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL; 
ALTER TABLE `permissions` ADD `group_name` VARCHAR(255) NULL AFTER `name`; 

composer require spatie/laravel-permission
php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"




php artisan make:migration create_insurances_table

php artisan migrate
php artisan make:model Insurance
php artisan make:controller OptionController
php artisan make:controller InsuranceController --resource

CREATE TABLE `temp_appt` (
  `id` bigint UNSIGNED NOT NULL,
  `appt_date` varchar(191),
  `appt_time` varchar(191),
  `full_name` varchar(191),
  `date_of_birth` varchar(191),
  `hoh_full_name` varchar(191),
  `prim_subscriber` varchar(191),
  `prim_carrier_name` varchar(191),
  `prim_subscriber_id` varchar(191),
  `sec_carrier_name` varchar(191),
  `sec_subscriber_id` varchar(191),
  `clinic` varchar(191),
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=MyISAM;

<input id="dob" name="dob" class="form-control @error('dob') is-invalid @enderror" value="{{ old('dob', $user->dob ? \Carbon\Carbon::parse($user->dob)->format('d/m/Y') : '') }}" data-inputmask="'alias': 'datetime'" data-inputmask-inputformat="dd/mm/yyyy">

<div class="col-sm-6">
    <div class="mb-3">
        <label class="form-label">Date Of Birth</label>
        <input id="dob" name="dob" class="form-control @error('dob') is-invalid @enderror" value="{{ old('dob') }}" data-inputmask="'alias': 'datetime'" data-inputmask-placeholder="*" data-inputmask-inputformat="dd/mm/yyyy" inputmode="numeric">
        @error('dob')
            <span class="text-danger">{{ $message }}</span>
        @enderror
    </div>
</div>

// 'dob' => 'date_format:m/d/Y',
// 'dob' => Carbon::createFromFormat('m/d/Y', $request->dob)->format('Y-m-d'),
                // if ($request->filled('dob')) {
//     try {
//         $data['dob'] = Carbon::createFromFormat('m/d/Y', $request->dob)->format('Y-m-d');
//     } catch (\Exception $e) {
//         return back()->withErrors(['dob' => 'Invalid date format.']);
//     }
// }
